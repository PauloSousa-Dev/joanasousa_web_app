{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  defineDocumentType,\n  defineNestedType,\n  makeSource,\n} from \"contentlayer/source-files\"\n\nexport const Home = defineDocumentType(() => ({\n  name: \"Home\",\n  filePathPattern: \"home/index.yaml\",\n  contentType: \"data\",\n  fields: {\n    title: { type: \"string\", required: true },\n    heroTitle: { type: \"string\", required: true },\n    heroSubtitle: { type: \"string\", required: true },\n    cta: { type: \"string\", required: true },\n  },\n}))\n\nexport const Pricing = defineDocumentType(() => ({\n  name: \"Pricing\",\n  filePathPattern: \"pricing/**/*.md\",\n  contentType: \"markdown\",\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"markdown\", required: true },\n    price: { type: \"string\", required: true },\n    duration: { type: \"string\", required: true },\n  },\n}))\n\nexport const Gallery = defineDocumentType(() => ({\n  name: \"Gallery\",\n  filePathPattern: \"gallery/**/*.yml\",\n  contentType: \"data\",\n  fields: {\n    title: { type: \"string\", required: true },\n    items: {\n      type: \"list\",\n      of: defineNestedType(() => ({\n        name: \"GalleryItem\",\n        fields: {\n          image: { type: \"string\", required: true },\n          alt: { type: \"string\", required: true },\n        },\n      })),\n    },\n  },\n}))\n\nexport const Page = defineDocumentType(() => ({\n  name: \"Page\",\n  filePathPattern: \"pages/**/*.mdx\",\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    slug: { type: \"string\", required: true },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/${doc.slug}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Home, Pricing, Gallery, Page],\n  disableImportAliasWarning: true,\n})\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,WAAW,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC5C,cAAc,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC/C,KAAK,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACxC;AACF,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,YAAY,UAAU,KAAK;AAAA,IAChD,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,UAAU,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC7C;AACF,EAAE;AAEK,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,OAAO;AAAA,MACL,MAAM;AAAA,MACN,IAAI,iBAAiB,OAAO;AAAA,QAC1B,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACxC,KAAK,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,QACxC;AAAA,MACF,EAAE;AAAA,IACJ;AAAA,EACF;AACF,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACzC;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,IAAI;AAAA,IAChC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,SAAS,SAAS,IAAI;AAAA,EAC5C,2BAA2B;AAC7B,CAAC;",
  "names": []
}
